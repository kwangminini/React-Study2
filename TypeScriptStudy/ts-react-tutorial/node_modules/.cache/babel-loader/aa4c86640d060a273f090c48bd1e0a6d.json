{"ast":null,"code":"var _jsxFileName = \"/Users/kwangmin/Desktop/React Velopert/TypeScriptStudy/ts-react-tutorial/src/ReducerSample.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSampleState, useSampleDispatch } from './SampleContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReducerSample() {\n  _s();\n\n  const state = useSampleState();\n  const dispatch = useSampleDispatch();\n\n  const setCount = () => dispatch({\n    type: 'SET_COUNT',\n    count: 5\n  });\n\n  const setText = () => dispatch({\n    type: 'SET_TEXT',\n    text: 'bye'\n  });\n\n  const setColor = () => dispatch({\n    type: 'SET_COLOR',\n    color: 'orange'\n  });\n\n  const toggleGood = () => dispatch({\n    type: 'TOGGLE_GOOD'\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"count: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), \" \", state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"text: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), \" \", state.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"color: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), \" \", state.color]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"isGood: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), \" \", state.isGood ? 'true' : 'false']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setCount,\n        children: \"SET_COUNT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setText,\n        children: \"SET_TEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setColor,\n        children: \"SET_COLOR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleGood,\n        children: \"TOGGLE_GOOD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReducerSample, \"+0WJkWZcytN0apElG2TVD9XdvoQ=\", false, function () {\n  return [useSampleState, useSampleDispatch];\n});\n\n_c = ReducerSample;\nexport default ReducerSample;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReducerSample\");","map":{"version":3,"sources":["/Users/kwangmin/Desktop/React Velopert/TypeScriptStudy/ts-react-tutorial/src/ReducerSample.tsx"],"names":["React","useSampleState","useSampleDispatch","ReducerSample","state","dispatch","setCount","type","count","setText","text","setColor","color","toggleGood","isGood"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,iBAAlD;;;AAGA,SAASC,aAAT,GAA0B;AAAA;;AAEtB,QAAMC,KAAK,GAAGH,cAAc,EAA5B;AACA,QAAMI,QAAQ,GAAGH,iBAAiB,EAAlC;;AAEA,QAAMI,QAAQ,GAAG,MAAMD,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAE,WAAP;AAAoBC,IAAAA,KAAK,EAAC;AAA1B,GAAD,CAA/B;;AACA,QAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAE,UAAP;AAAmBG,IAAAA,IAAI,EAAC;AAAxB,GAAD,CAA9B;;AACA,QAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAE,WAAP;AAAoBK,IAAAA,KAAK,EAAE;AAA3B,GAAD,CAA/B;;AACA,QAAMC,UAAU,GAAG,MAAMR,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAjC;;AAEA,sBACI;AAAA,4BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OAC0BH,KAAK,CAACI,KADhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OACyBJ,KAAK,CAACM,IAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OAC0BN,KAAK,CAACQ,KADhC;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OAC2BR,KAAK,CAACU,MAAN,GAAe,MAAf,GAAwB,OADnD;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAaI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAER,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAEE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GAjCQV,a;UAESF,c,EACGC,iB;;;KAHZC,a;AAmCT,eAAeA,aAAf","sourcesContent":["import React, {useReducer} from 'react';\nimport { useSampleState, useSampleDispatch } from './SampleContext';\n\n\nfunction ReducerSample () {\n    \n    const state = useSampleState();\n    const dispatch = useSampleDispatch();\n    \n    const setCount = () => dispatch({type: 'SET_COUNT', count:5});\n    const setText = () => dispatch({type: 'SET_TEXT', text:'bye'});\n    const setColor = () => dispatch({type: 'SET_COLOR', color: 'orange'});\n    const toggleGood = () => dispatch({type: 'TOGGLE_GOOD'});\n\n    return(\n        <div>\n            <p>\n                <code>count: </code> {state.count}\n            </p>\n            <p>\n                <code>text: </code> {state.text}\n            </p>\n            <p>\n                <code>color: </code> {state.color}\n            </p>\n            <p>\n                <code>isGood: </code> {state.isGood ? 'true' : 'false'}\n            </p>\n            <div>\n                <button onClick={setCount}>SET_COUNT</button>\n                <button onClick={setText}>SET_TEXT</button>\n                <button onClick={setColor}>SET_COLOR</button>\n                <button onClick={toggleGood}>TOGGLE_GOOD</button>\n\n            </div>\n        </div>\n    )\n}\n\nexport default ReducerSample;"]},"metadata":{},"sourceType":"module"}